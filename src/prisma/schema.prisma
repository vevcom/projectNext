generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URI")
}

model User {
  id        Int    @id @default(autoincrement())
  username  String @unique
  email     String @unique
  password  String // Dette er kun for testing
  firstname String @default("[Fjernet]")
  lastname  String @default("[Fjernet]")

  @@map("users")
}

model Image {
  id                   Int              @id @default(autoincrement())
  fsLocation           String           @unique
  fsLocationSmallSize  String?          @unique
  fsLocationMediumSize String?          @unique
  name                 String           @unique
  ext                  String
  alt                  String
  collection           ImageCollection  @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  coverImageFor        ImageCollection? @relation(name: "coverImage")
  collectionId         Int
  createdAt            DateTime         @default(now()) @map("created_at")
  updatedAt            DateTime         @updatedAt @map("updated_at")
  CmsImage             CmsImage[]

  @@map("images")
}

model ImageCollection {
  id           Int      @id @default(autoincrement())
  name         String   @unique
  description  String?
  images       Image[]
  coverImage   Image?   @relation(fields: [coverImageId], references: [id], name: "coverImage")
  coverImageId Int?     @unique
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("image_collections")
}

enum ImageSize {
  SMALL
  MEDIUM
  LARGE
}

model CmsImage {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  image          Image?           @relation(fields: [imageId], references: [id], onDelete: Cascade)
  imageId        Int?
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  imageSize      ImageSize        @default(MEDIUM) @map("small_image")
  ArticleSection ArticleSection[]

  @@map("cms_images")
}

model CmsParagraph {
  id             Int             @id @default(autoincrement())
  name           String          @unique
  contentMd      String          @default("")
  contentHtml    String          @default("")
  createdAt      DateTime        @default(now()) @map("created_at")
  updatedAt      DateTime        @updatedAt @map("updated_at")
  ArticleSection ArticleSection?

  @@map("cms_paragraphs")
}

model CmsLink {
  id             Int             @id @default(autoincrement())
  name           String          @unique
  url            String
  createdAt      DateTime        @default(now()) @map("created_at")
  updatedAt      DateTime        @updatedAt @map("updated_at")
  ArticleSection ArticleSection?

  @@map("cms_links")
}

enum Position {
  LEFT
  RIGHT
}

model ArticleSection {
  id             Int          @id @default(autoincrement())
  name           String       @unique
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")
  cmsImage       CmsImage     @relation(fields: [cmsImageId], references: [id], onDelete: Cascade)
  cmsImageId     Int          @unique
  cmsLink        CmsLink      @relation(fields: [cmsLinkId], references: [id], onDelete: Cascade)
  cmsLinkId      Int          @unique
  cmsParagraph   CmsParagraph @relation(fields: [cmsParagraphId], references: [id], onDelete: Cascade)
  cmsParagraphId Int          @unique
  imagePosition  Position     @default(RIGHT) @map("image_position")
  imageSize      Int          @default(200)

  @@map("article_sections")
}
