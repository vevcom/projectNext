enum SpecialCmsImage {
  FRONTPAGE_LOGO
  FRONTPAGE_1
  FRONTPAGE_2
  FRONTPAGE_3
  FRONTPAGE_4
  SERVER_ERROR
  NOT_FOUND
  AUTH_ICON
  FOOTER_LOGO
  FOOTER_1
  FOOTER_2
  FOOTER_3
  LOADER_IMAGE
  MOBILE_NAV_LOGIN_BUTTON
  MOBILE_NAV_PRIMARY_BUTTON
  NAV_LOGIN_BUTTON
  NAV_PRIMARY_BUTTON
}

model CmsImage {
  id                   Int              @id @default(autoincrement())
  name                 String           @unique @default(cuid())
  image                Image?           @relation(fields: [imageId], references: [id], onDelete: SetNull)
  imageId              Int?
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  imageSize            ImageSize        @default(MEDIUM)
  articleSection       ArticleSection?  @relation(fields: [articleSectionId], references: [id], onDelete: Cascade)
  articleSectionId     Int?             @unique
  coverImageforArticle Article?
  Ombul                Ombul?
  committee            Committee?
  special              SpecialCmsImage? @unique
  ScreenPage           ScreenPage[]
  School               School[]
  Event                Event[]
  Badge                Badge?
  Company              Company[]
}

enum SpecialCmsParagraph {
  FRONTPAGE_1
  FRONTPAGE_2
  FRONTPAGE_3
  FRONTPAGE_4

  INTEREST_GROUP_GENERAL_INFO
  CAREER_INFO
}

model CmsParagraph {
  id               Int                  @id @default(autoincrement())
  name             String               @unique @default(cuid())
  contentMd        String               @default("")
  contentHtml      String               @default("")
  createdAt        DateTime             @default(now())
  updatedAt        DateTime             @updatedAt
  articleSection   ArticleSection?      @relation(fields: [articleSectionId], references: [id], onDelete: Cascade)
  articleSectionId Int?                 @unique
  special          SpecialCmsParagraph? @unique
  ScreenPage       ScreenPage[]
  Course           Course[]
  School           School[]
  Event            Event[]
  Committee        Committee?
}

enum SpecialCmsLink {
  CAREER_LINK_TO_CONTACTOR
}

model CmsLink {
  id               Int             @id @default(autoincrement())
  name             String          @unique @default(cuid())
  url              String          @default("/")
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  text             String          @default("Link")
  special          SpecialCmsLink? @unique
  articleSection   ArticleSection? @relation(fields: [articleSectionId], references: [id], onDelete: Cascade)
  articleSectionId Int?            @unique
  School           School[]
}

enum Position {
  LEFT
  RIGHT
}

model ArticleSection {
  id        Int      @id @default(autoincrement())
  name      String   @unique @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  imagePosition Position @default(RIGHT)
  imageSize     Int      @default(200)
  article       Article? @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId     Int?
  order         Int      @default(autoincrement()) //The order "position" of the article section in the article

  //If true, the article section will be deleted if it is empty, ie has no relation to paragraph, link or image
  destroyOnEmpty Boolean        @default(true)
  cmsImage       CmsImage?
  cmsParagraph   CmsParagraph?
  cmsLink        CmsLink?
  InterestGroup  InterestGroup?

  @@unique([articleId, order]) //There can only be one article section with a given order in an article
}

model Article {
  id                  Int              @id @default(autoincrement())
  name                String
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  articleSections     ArticleSection[]
  newsArticle         NewsArticle?
  articleCategory     ArticleCategory? @relation(fields: [articleCategoryId, articleCategoryName], references: [id, name], onDelete: Cascade)
  articleCategoryId   Int?
  articleCategoryName String?
  coverImage          CmsImage         @relation(fields: [coverImageId], references: [id], onDelete: Cascade)
  coverImageId        Int              @unique
  JobAd               JobAd?
  Committee           Committee?

  @@unique([name, id])
  @@unique([articleCategoryName, name])
}

model NewsArticle {
  id             Int        @id @default(autoincrement())
  description    String?
  endDateTime    DateTime //when the article is no longer considered current
  article        Article    @relation(fields: [articleId, articleName], references: [id, name], onDelete: Cascade) //This should always be set, but it is not required by schema (prisma limitation)
  articleId      Int        @unique
  articleName    String
  omegaOrder     OmegaOrder @relation(fields: [orderPublished], references: [order], onDelete: Restrict)
  orderPublished Int

  @@unique([articleId, articleName])
  @@unique([articleName, orderPublished])
}

model ArticleCategory {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  articles    Article[]
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@unique([id, name])
}
