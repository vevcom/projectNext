enum Permission {
  // Job ads
  JOBAD_CREATE
  JOBAD_READ
  JOBAD_UPDATE
  JOBAD_DESTROY

  // Omega Quotes
  OMEGAQUOTES_WRITE
  OMEGAQUOTES_READ

  // Ombul
  OMBUL_CREATE
  OMBUL_READ
  OMBUL_UPDATE
  OMBUL_DESTROY

  // Groups - Generic
  GROUP_READ
  GROUP_DESTROY
  GROUP_ADMIN //TODO: Temp needs discussion about this
  // Since groups can only be created with a specific type, there is no need to
  // have permissions to create or update a generic group.

  // omega order
  OMEGA_ORDER_READ
  OMEGA_ORDER_CREATE
  // Since groups can only be created with a specific type, there is no need to
  // have permissions to create or update a generic group.

  // Groups - Classes
  CLASS_CREATE
  CLASS_READ
  CLASS_UPDATE
  CLASS_DESTROY

  // Groups - Committess
  COMMITTEE_CREATE
  COMMITTEE_READ
  COMMITTEE_UPDATE
  COMMITTEE_DESTROY

  // Groups - InterestGroups
  INTEREST_GROUP_ADMIN
  INTEREST_GROUP_READ

  // Groups - OmegaMembershipGroup
  OMEGA_MEMBERSHIP_GROUP_READ
  OMEGA_MEMBERSHIP_GROUP_UPDATE
  // Since omega membership groups always need to exist there are no
  // permissions to create or destroy them.

  // Groups - StudyProgramme
  STUDY_PROGRAMME_CREATE
  STUDY_PROGRAMME_READ
  STUDY_PROGRAMME_UPDATE
  STUDY_PROGRAMME_DESTROY

  // Lockers
  LOCKER_ADMIN
  LOCKER_USE

  // CMS permissions - it overrides the visibility of things
  CMS_ADMIN

  // User list permissions - theese are admin permissions, and do not have anything
  // to do with a userÂ´s ability to edit its own user.
  // USER_READ for example means that the user can read the list of users.
  USERS_READ
  USERS_UPDATE
  USERS_DESTROY
  USERS_CREATE

  USERS_CONNECT_STUDENT_CARD

  IMAGE_COLLECTION_CREATE
  IMAGE_ADMIN

  EVENT_CREATE
  EVENT_ADMIN
  EVENT_READ
  EVENT_REGISTRATION_CREATE
  EVENT_REGISTRATION_READ

  // Notifications
  NOTIFICATION_CHANNEL_CREATE
  NOTIFICATION_CHANNEL_READ
  NOTIFICATION_CHANNEL_UPDATE

  NOTIFICATION_SUBSCRIPTION_READ
  NOTIFICATION_SUBSCRIPTION_READ_OTHER
  NOTIFICATION_SUBSCRIPTION_UPDATE
  NOTIFICATION_SUBSCRIPTION_UPDATE_OTHER

  NOTIFICATION_CREATE

  // Mail
  MAIL_SEND

  // Mail Aliases
  MAILALIAS_CREATE
  MAILALIAS_READ
  MAILALIAS_UPDATE
  MAILALIAS_DESTORY

  // Mailing list
  MAILINGLIST_CREATE
  MAILINGLIST_READ
  MAILINGLIST_UPDATE
  MAILINGLIST_DESTROY

  // Mailing list relations
  MAILINGLIST_ALIAS_CREATE
  MAILINGLIST_ALIAS_DESTROY
  MAILINGLIST_GROUP_CREATE
  MAILINGLIST_GROUP_DESTROY
  MAILINGLIST_USER_CREATE
  MAILINGLIST_USER_DESTROY
  MAILINGLIST_EXTERNAL_ADDRESS_CREATE
  MAILINGLIST_EXTERNAL_ADDRESS_DESTROY

  // External mail addresses
  MAILADDRESS_EXTERNAL_CREATE
  MAILADDRESS_EXTERNAL_READ
  MAILADDRESS_EXTERNAL_UPDATE
  MAILADDRESS_EXTERNAL_DESTROY

  // Admisstion
  ADMISSION_TRIAL_CREATE

  // API keys
  APIKEY_ADMIN
  SCREEN_READ
  SCREEN_ADMIN

  // Omega course catalouge
  SCHOOLS_READ
  SCHOOLS_ADMIN

  COURSES_READ
  COURSES_ADMIN

  // Omega job ads
  COMPANY_READ
  COMPANY_ADMIN

  // Dots
  DOTS_ADMIN

  // Cabin
  CABIN_CALENDAR_READ
  CABIN_BOOKING_CABIN_CREATE
  CABIN_BOOKING_BED_CREATE
  CABIN_BOOKING_ADMIN
  CABIN_ADMIN
  CABIN_PRODUCTS_ADMIN

  // Shop
  SHOP_READ
  SHOP_ADMIN

  PRODUCT_READ
  PRODUCT_ADMIN

  PURCHASE_CREATE
  PURCHASE_CREATE_ONBEHALF

  // Image licenses
  LICENSE_ADMIN

  // Permission admin
  PERMISSION_GROUP_READ
  PERMISSION_GROUP_ADMIN
  PERMISSION_DEFAULT_ADMIN
}

model GroupPermission {
  group      Group      @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId    Int
  permission Permission

  @@unique([groupId, permission])
}

model DefaultPermission {
  permission Permission @unique
}

