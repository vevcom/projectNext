@use "_colors";
@use "_variables";
@use "_fonts";

@use "sass:color";

@mixin round {
    border-radius: variables.$rounding;
    padding: variables.$rounding;
}

@mixin card {
    border-radius: variables.$cardRounding;
    padding: variables.$cardPadding;
}

@mixin boxShadow {
    box-shadow: colors.$gray-700 0 0 10px;
}

@mixin table {
    width: 100%;
    border-collapse: collapse;
    margin: 20px 0;
    font-size: 18px;
    text-align: left;
    th, td {
        border: 1px solid colors.$gray-300;
        padding: 8px;
    }
    th {
        background-color: colors.$gray-200;
        color: colors.$black;
    }
    tr:nth-child(even) {
        background-color: colors.$gray-100;
    }
    tr:hover {
        background-color: colors.$gray-200;
    }
}

@mixin btn($color: colors.$white) {
    text-align: center;
    text-decoration: none;
    font-size: fonts.$m;
    background: $color;
    padding: 2*variables.$gap;
    margin: variables.$gap;
    color: colors.$black;
    border: none;
    transition: .5s background;
    &:hover {
        background-color: color.adjust($color, $lightness: -40%);
        cursor: pointer;
    }
    @include round;
}

//NOTE: also made to work for <Link /> (<a> tag)
@mixin borderBtn($color: colors.$white, $hoverColor: color.adjust($color, $lightness: -40%)) { 
    @include btn($color);
    background: transparent;
    border: solid $color 2px;
    color: $color;
    &:hover {
        background: $color;
        color: $hoverColor;
    }
}

@mixin roundAdminSvgBtn() {
    width: 45px;
    height: 45px;
    background-color: colors.$primary;
    border: none;
    border-radius: 50%;
    display: grid;
    place-items: center;
    text-decoration: none;
    svg {
        color: colors.$black;
        transition: color 0.6s;
        width: 31px;
        height: 31px;
    }
    &:hover svg {
        color: colors.$gray-500;
        cursor: pointer;
    }
}

@mixin roundBtn($color: colors.$white) {
    width: 20px;
    height: 20px;
    background-color: $color;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    transition: .5s background;
    display: flex;
    justify-content: center;
    align-items: center;
    &:hover {
        background-color: color.adjust($color, $lightness: -10%);
    }
}

@mixin yellowIconLink {
    color: colors.$yellow;
    padding: variables.$gap;
    width: 30px;
    height: 30px;
    &:hover {
        color: color.adjust(colors.$yellow, $lightness: -10%);
        cursor: pointer;
    }
}

@mixin loadImage {
    &::after {
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        background-image:linear-gradient(-45deg, colors.$white 0px, colors.$white 20%, colors.$gray-500 60%, colors.$white 80%, colors.$white 100%);
        animation: rotate 10s linear infinite;
        scale: 10;
    }
}

@mixin pagePadding($max-width: 900px) {
    $width: 100%;

    width: $width;
    max-width: $max-width;
    margin-left: max(calc(($width - min($width, $max-width)) / 2), 0px);
    position: relative;
    overflow-y: hidden;
}

@mixin ImageCardListLayout {
    margin: 1em 0;
    display: grid;
    grid-template-columns: repeat(3, calc((100% - 2em) / 3));
    grid-gap: 1em;
    @media screen and (max-width: variables.$mobileBreakpoint) {
        grid-template-columns: repeat(2, calc((100% - 2em) / 2));
    }
    @media screen and (max-width: 500px) {
        grid-template-columns: 1fr;
        place-items: center;
        > * {
            width: 100%;
        }
    }
}

@mixin screenMobile {
    @media (max-width: variables.$mobileBreakpoint) {
        @content;
    }
}

@mixin screenLg {
    @media (min-width: calc(variables.$mobileBreakpoint + 1px)) {
        @content;
    }
}

@keyframes rotate {
    0% {
        transform: translate(0) rotate(0deg);
    }
    100% {
        transform: translate(250%) rotate(5deg);
    }
}
