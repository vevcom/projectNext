services:
    projectnext:
        build:
            context: ${PROJECT_ROOT:-.}/
            dockerfile: ${PROJECT_ROOT:-.}/Dockerfile
        environment:
            DB_URI: ${DB_URI}
            LOG_LEVEL: ${LOG_LEVEL}
            LOG_TO_CONSOLE: ${LOG_TO_CONSOLE}
            LOG_TO_FOLDER: ${LOG_TO_FOLDER}
            LOG_MAX_FILES: ${LOG_MAX_FILES}
            NEXTAUTH_URL: ${NEXTAUTH_URL}
            NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
            PASSWORD_SALT_ROUNDS: ${PASSWORD_SALT_ROUNDS}
            PASSWORD_ENCRYPTION_KEY: ${PASSWORD_ENCRYPTION_KEY}
            API_KEY_SALT_ROUNDS: ${API_KEY_SALT_ROUNDS}
            API_KEY_ENCRYPTION_KEY: ${API_KEY_ENCRYPTION_KEY}
            NEXT_TELEMETRY_DISABLED: ${NEXT_TELEMETRY_DISABLED}
            FEIDE_CLIENT_ID: ${FEIDE_CLIENT_ID}
            FEIDE_CLIENT_SECRET: ${FEIDE_CLIENT_SECRET}
            MAIL_SERVER: ${MAIL_SERVER}
            MAIL_DOMAIN: ${MAIL_DOMAIN}
            DOMAIN: ${DOMAIN}
            JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
            JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
            JWT_SECRET: ${JWT_SECRET}
        depends_on:
            db:
                condition: service_healthy
            prisma:
                condition: service_completed_successfully
        links:
            - db

    db:
        image: postgres:16.0-alpine
        ports:
            - 5432:5432
        environment:
            POSTGRES_DB: ${DB_NAME}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "sh -c 'pg_isready -U ${DB_USERNAME} -d ${DB_NAME}'"
                ]
            interval: 0.5s
            timeout: 0.5s
            retries: 60

    prisma:
        build:
            context: ${PROJECT_ROOT:-.}/src/prisma
            dockerfile: ${PROJECT_ROOT:-.}/prismaservice/Dockerfile
            args:
                SHOULD_MIGRATE: ${VEVEN_DB_URI}
        environment:
            # NODE_ENV is set in docker-compose.(dev|prod|test).yml
            DB_URI: ${DB_URI}
            MIGRATE_FROM_VEVEN: ${MIGRATE_FROM_VEVEN}
            VEVEN_STORE_URL: ${VEVEN_STORE_URL}
            VEVEN_DB_URI: ${VEVEN_DB_URI}
            MIGRATION_WITH_LIMITS: ${MIGRATION_WITH_LIMITS}
            PASSWORD_SALT_ROUNDS: ${PASSWORD_SALT_ROUNDS}
            PASSWORD_ENCRYPTION_KEY: ${PASSWORD_ENCRYPTION_KEY}
            API_KEY_SALT_ROUNDS: ${API_KEY_SALT_ROUNDS}
            API_KEY_ENCRYPTION_KEY: ${API_KEY_ENCRYPTION_KEY}
        depends_on:
            db:
                condition: service_healthy
        links:
            - db

    nginx:
        image: nginx:1.21.3-alpine
        depends_on:
            - projectnext
        links:
            - projectnext
