{
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "root": true,
  "rules": {
    "indent": [
      "error",
      4,
      {
          "SwitchCase": 1,
          "VariableDeclarator": 1
      }
    ],
    // require function expressions to have a name
    "func-names": "warn",
    // enforce newline at the end of file, with no multiple empty lines
    "eol-last": "error",  
    // disallow padding inside computed properties, ie. obj[ "fjie"] not allowed
    "computed-property-spacing": [ 
      "error",
      "never"
    ],
    "comma-style": [
      "error",
      "last"
    ],
    // suggest using arrow functions as callbacks
    "prefer-arrow-callback": "error",
    // suggest using template literals instead of string concatenation
    "prefer-template": "error",
    // disallow modifying variables that are declared using const
    "no-const-assign": "error",
    // disallow symbol constructor
    "no-new-symbol": "error",
    // disallow to use this/super before super() calling in constructors.
    "no-this-before-super": "error",
    // require let or const instead of var
    "no-var": "error",
    // disallow unnecessary constructor
    "no-useless-constructor": "error",
    // require method and property shorthand syntax for object literals
    // ie write obj = { x }, not obj = {x: x}
    "object-shorthand": [
        "error",
        "always"
    ],

    //SOME ODD OPTIONS:
    // suggest using the spread operator instead of .apply()
    "prefer-spread": "error",
    // suggest using Reflect methods where applicable
    "prefer-reflect": "error",
    // use rest parameters instead of arguments
    "prefer-rest-params": "error",
    // enforce usage of spacing in template strings
    "template-curly-spacing": "error"
  }
}
